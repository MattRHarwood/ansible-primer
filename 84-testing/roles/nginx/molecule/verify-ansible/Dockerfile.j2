# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

RUN if [ $(command -v apt-get) ]; then export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y python3 sudo bash ca-certificates iproute2 python3-apt aptitude && apt-get clean && rm -rf /var/lib/apt/lists/*; \
    elif [ $(command -v dnf) ]; then dnf makecache && dnf --assumeyes install /usr/bin/python3 /usr/bin/python3-config /usr/bin/dnf-3 sudo bash iproute && dnf clean all; \
    elif [ $(command -v yum) ]; then yum makecache fast && yum install -y /usr/bin/python /usr/bin/python2-config sudo yum-plugin-ovl bash iproute && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
    elif [ $(command -v zypper) ]; then zypper refresh && zypper install -y python3 sudo bash iproute2 && zypper clean -a; \
    elif [ $(command -v apk) ]; then apk update && apk add --no-cache python3 sudo bash ca-certificates; \
    elif [ $(command -v xbps-install) ]; then xbps-install -Syu && xbps-install -y python3 sudo bash ca-certificates iproute2 && xbps-remove -O; fi

# Dockerfile for primer images
# this isn't anything special
# * expose some ports that may be used later
# * install commands needed
# * setup `docker-systemctl-replacement`
# * create a 'docker' user for Ansible to use
# * add the generated ssh-key to authorized_keys

# the result is a docker container that runs a
# mocked out systemd system

RUN if command -v apt-get; then \
        apt-get update && \
        apt-get upgrade -y && \
        export DEBIAN_FRONTEND=noninteractive && \
        apt-get install --no-install-recommends -y sudo systemd init python3 \
            python3-pip unzip curl openssh-server openssh-sftp-server && \
        apt-get purge -y && apt-get clean && \
        ln -sf python3 /usr/bin/python2; \
    elif command -v yum; then \
        yum repolist -y && \
        yum update -y && \
        yum install -y systemd sudo python3 shadow-utils unzip openssh-server && \
        rm -rf /var/cache/yum && \
        if command -v amazon-linux-extras; then \
            amazon-linux-extras install -y epel; \
        fi && \
        /usr/bin/ssh-keygen -A && \
        rm -f /run/nologin && \
        if test ! -e /usr/bin/python; then \
            ln -s python3 /usr/bin/python; \
            ln -s python3 /usr/bin/python2; \
        fi && \
        yum clean all && rm -rf /var/cache/yum; \
    fi

RUN mkdir -p /run/systemd/system
RUN curl https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl3.py > /usr/bin/systemctl
RUN chmod +x /usr/bin/systemctl
ENTRYPOINT ["/usr/bin/systemctl", "default"]

RUN useradd -m -s /bin/bash docker && echo 'docker ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

USER docker
WORKDIR /home/docker
